package com.primer.secomputadora.models




class DiagnosticEngine {

    private val symptoms = listOf(
        Symptom(
            id = "no_power",
            title = "No enciende para nada",
            description = "La computadora no muestra signos de vida",
            icon = "power_off",
            severity = SeverityLevel.HIGH
        ),
        Symptom(
            id = "no_display",
            title = "Enciende pero no muestra imagen",
            description = "Se escucha funcionar pero la pantalla estÃ¡ en negro",
            icon = "monitor",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "slow_performance",
            title = "Funciona muy lento",
            description = "Todo tarda mucho en cargar y responder",
            icon = "slow",
            severity = SeverityLevel.LOW
        ),
        Symptom(
            id = "blue_screen",
            title = "Pantallas azules o negras con texto",
            description = "Aparecen pantallas de error",
            icon = "error",
            severity = SeverityLevel.HIGH
        ),
        Symptom(
            id = "strange_sounds",
            title = "Hace ruidos extraÃ±os",
            description = "Sonidos que no hacÃ­a antes",
            icon = "sound",
            severity = SeverityLevel.MEDIUM
        ),
        // SÃ­ntomas adicionales
        Symptom(
            id = "internet_problems",
            title = "No se conecta a internet",
            description = "No puede navegar aunque todo parece estar conectado",
            icon = "wifi_off",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "freezing",
            title = "Se congela o traba",
            description = "Se queda pegada y no responde a nada",
            icon = "freeze",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "overheating",
            title = "Se calienta mucho",
            description = "EstÃ¡ muy caliente al tocarla",
            icon = "temperature",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "programs_not_opening",
            title = "Los programas no abren",
            description = "Hago click pero no pasa nada",
            icon = "app_error",
            severity = SeverityLevel.LOW
        ),
        Symptom(
            id = "random_shutdown",
            title = "Se apaga sola",
            description = "Se apaga sin que yo haga nada",
            icon = "power_off_auto",
            severity = SeverityLevel.HIGH
        )

    )

// SÃ­ntomas adicionales que puedes agregar a tu lista existente

    private val additionalSymptoms = listOf(
        Symptom(
            id = "internet_problems",
            title = "No se conecta a internet",
            description = "No puede navegar aunque todo parece estar conectado",
            icon = "wifi_off",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "freezing",
            title = "Se congela o traba",
            description = "Se queda pegada y no responde a nada",
            icon = "freeze",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "overheating",
            title = "Se calienta mucho",
            description = "EstÃ¡ muy caliente al tocarla",
            icon = "temperature",
            severity = SeverityLevel.MEDIUM
        ),
        Symptom(
            id = "programs_not_opening",
            title = "Los programas no abren",
            description = "Hago click pero no pasa nada",
            icon = "app_error",
            severity = SeverityLevel.LOW
        ),
        Symptom(
            id = "random_shutdown",
            title = "Se apaga sola",
            description = "Se apaga sin que yo haga nada",
            icon = "power_off_auto",
            severity = SeverityLevel.HIGH
        )
    )

// Preguntas para los nuevos sÃ­ntomas

    private fun getInternetProblemsQuestions(): List<Question> = listOf(
        Question(
            id = "wifi_connected",
            text = "Â¿Aparece el sÃ­mbolo de WiFi en la pantalla?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, aparece normal",
                "Aparece con una X o signo de exclamaciÃ³n",
                "No aparece nada",
                "No sÃ© dÃ³nde verlo"
            )
        ),
        Question(
            id = "other_devices",
            text = "Â¿Otros dispositivos se conectan bien a internet? (celular, TV, etc.)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "cable_connection_internet",
            text = "Â¿EstÃ¡ conectada por cable de red o por WiFi?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Solo WiFi",
                "Cable de red conectado",
                "No estoy seguro/a"
            )
        ),
        Question(
            id = "router_restart",
        text = "Â¿Has intentado apagar y encender el router/mÃ³dem?",
        type = QuestionType.YES_NO
    )
    )

    private fun getFreezingQuestions(): List<Question> = listOf(
        Question(
            id = "freeze_frequency",
            text = "Â¿Con quÃ© frecuencia se congela?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Varias veces al dÃ­a",
                "Una vez al dÃ­a",
                "Pocas veces a la semana",
                "Solo ocasionalmente"
            )
        ),
        Question(
            id = "freeze_pattern",
            text = "Â¿CuÃ¡ndo se congela generalmente?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Al abrir programas especÃ­ficos",
                "DespuÃ©s de un rato de uso",
                "Al hacer varias cosas a la vez",
                "En cualquier momento sin patrÃ³n"
            )
        ),
        Question(
            id = "mouse_keyboard_response",
            text = "Â¿Cuando se congela, el mouse y teclado no responden para nada?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "force_restart",
            text = "Â¿Tienes que apagar la computadora manteniendo presionado el botÃ³n de encendido?",
            type = QuestionType.YES_NO
        ),
        // ðŸ”¹ Preguntas nuevas sugeridas

        // Temperatura
        Question(
            id = "overheating",
            text = "Â¿Has notado que la computadora se calienta mucho o el ventilador suena muy fuerte?",
            type = QuestionType.YES_NO
        ),

        // Actualizaciones
        Question(
            id = "recent_updates",
            text = "Â¿Tu computadora se actualizÃ³ recientemente o instalaste nuevos programas?",
            type = QuestionType.YES_NO
        ),

        // Espacio en disco
        Question(
            id = "low_disk_space",
            text = "Â¿Tu disco duro tiene poco espacio libre?",
            type = QuestionType.YES_NO
        ),

        // Virus o malware
        Question(
            id = "antivirus_scan",
            text = "Â¿Has pasado un antivirus recientemente?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, y no encontrÃ³ nada",
                "SÃ­, encontrÃ³ virus y los eliminÃ©",
                "No he pasado antivirus"
            )
        ),

        // Errores recientes
        Question(
            id = "blue_screen",
            text = "Â¿Alguna vez ha aparecido una pantalla azul con un mensaje de error?",
            type = QuestionType.YES_NO
        ),

        // Fuente de energÃ­a
        Question(
            id = "power_source",
            text = "Â¿Usas laptop con baterÃ­a o siempre conectada al cargador?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Siempre con baterÃ­a",
                "Siempre conectada al cargador",
                "Ambas opciones"
            )
        ),

        // Ruido inusual
        Question(
            id = "unusual_noises",
            text = "Â¿Escuchas ruidos extraÃ±os (clics, zumbidos) dentro de la computadora?",
            type = QuestionType.YES_NO
        )
    )

    private fun getOverheatingQuestions(): List<Question> = listOf(
        Question(
            id = "heat_location",
            text = "Â¿DÃ³nde sientes que se calienta mÃ¡s?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "En la parte de abajo (laptop)",
                "En los lados donde salen aires",
                "En toda la computadora",
                "Solo en ciertas partes"
            )
        ),
        Question(
            id = "heat_timing",
            text = "Â¿CuÃ¡ndo se calienta mÃ¡s?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Desde que la enciendo",
                "DespuÃ©s de usarla un rato",
                "Solo cuando hago tareas pesadas",
                "Todo el tiempo que estÃ¡ encendida"
            )
        ),
        Question(
            id = "shutdown_due_heat",
            text = "Â¿Se ha apagado sola por el calor?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "ventilation_blocked",
            text = "Â¿Las salidas de aire estÃ¡n bloqueadas o tienen polvo visible?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, tienen mucho polvo",
                "Un poco de polvo",
                "No, estÃ¡n limpias",
                "No sÃ© dÃ³nde estÃ¡n las salidas de aire"
            )
        )
    )

    private fun getProgramsNotOpeningQuestions(): List<Question> = listOf(
        Question(
            id = "all_programs",
            text = "Â¿NingÃºn programa abre o solo algunos especÃ­ficos?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "NingÃºn programa abre",
                "Solo algunos programas especÃ­ficos",
                "Algunos abren, otros no"
            )
        ),
        Question(
            id = "error_messages",
            text = "Â¿Aparece algÃºn mensaje de error cuando intentas abrir programas?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "double_click",
            text = "Â¿EstÃ¡s haciendo doble click en los Ã­conos?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, doble click rÃ¡pido",
                "Solo un click",
                "No estoy seguro/a cÃ³mo se hace"
            )
        ),
        Question(
            id = "icon_location",
            text = "Â¿Los Ã­conos estÃ¡n en el escritorio o en otro lugar?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "En el escritorio",
                "En la barra de tareas (abajo)",
                "En el menÃº de inicio",
                "No estoy seguro/a"
            )
        )
    )

    private fun getRandomShutdownQuestions(): List<Question> = listOf(
        Question(
            id = "shutdown_warning",
            text = "Â¿Se apaga de repente o aparece algÃºn mensaje antes?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Se apaga de repente sin avisar",
                "Aparece mensaje de que se va a apagar",
                "La pantalla se pone azul primero",
                "Se reinicia sola"
            )
        ),
        Question(
            id = "activity_during_shutdown",
            text = "Â¿QuÃ© estabas haciendo cuando se apagÃ³?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Trabajando normalmente",
                "Jugando o viendo videos",
                "No estaba haciendo nada especial",
                "Usando muchos programas a la vez"
            )
        ),
        Question(
            id = "power_supply_check",
            text = "Â¿La computadora estÃ¡ conectada a un regulador de voltaje o directamente al enchufe?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Directamente al enchufe de la pared",
                "A un regulador o UPS",
                "A una extensiÃ³n elÃ©ctrica",
                "No estoy seguro/a"
            )
        ),
        Question(
            id = "shutdown_pattern",
            text = "Â¿Hay algÃºn patrÃ³n en los apagados?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Siempre despuÃ©s de cierto tiempo de uso",
                "Solo cuando hace calor en el ambiente",
                "Completamente al azar",
                "Solo cuando uso ciertos programas"
            )
        )
    )









    fun diagnose(symptomId: String, answers: Map<String, String>): DiagnosticResult {
        return when (symptomId) {
            "no_power" -> diagnoseNoPower(answers)
            "no_display" -> diagnoseNoDisplay(answers)
            "slow_performance" -> diagnoseSlowPerformance(answers)
            "blue_screen" -> diagnoseBlueScreen(answers)
            "strange_sounds" -> diagnoseStrangeSounds(answers)
            "internet_problems" -> diagnoseInternetProblems(answers)
            "freezing" -> diagnoseFreezing(answers)
            "overheating" -> diagnoseOverheating(answers)
            "programs_not_opening" -> diagnoseProgramsNotOpening(answers)
            "random_shutdown" -> diagnoseRandomShutdown(answers)
            else -> DiagnosticResult(
                title = "DiagnÃ³stico no disponible",
                description = "Por favor contacta con un tÃ©cnico",
                severity = SeverityLevel.MEDIUM,
                solutions = emptyList(),
                probability = 0
            )
        }
    }



    fun getSymptoms(): List<Symptom> = symptoms

    fun getQuestionsForSymptom(symptomId: String): List<Question> {
        return when (symptomId) {
            "no_power" -> getNoPowerQuestions()
            "no_display" -> getNoDisplayQuestions()
            "slow_performance" -> getSlowPerformanceQuestions()
            "blue_screen" -> getBlueScreenQuestions()
            "strange_sounds" -> getStrangeSoundsQuestions()
            "internet_problems" -> getInternetProblemsQuestions()
            "freezing" -> getFreezingQuestions()
            "overheating" -> getOverheatingQuestions()
            "programs_not_opening" -> getProgramsNotOpeningQuestions()
            "random_shutdown" -> getRandomShutdownQuestions()
            else -> emptyList()
        }
    }

    private fun getNoPowerQuestions(): List<Question> = listOf(
        Question(
            id = "power_cable",
            text = "Â¿EstÃ¡ conectado el cable de electricidad? (como el cargador de tu celular)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "power_button",
            text = "Â¿Al presionar el botÃ³n de encendido, se enciende alguna luz o se escucha algÃºn sonido?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "recent_changes",
            text = "Â¿PasÃ³ algo especial antes de que dejara de funcionar?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Tormenta elÃ©ctrica",
                "Se fue la luz",
                "La movÃ­ de lugar",
                "InstalÃ© algo nuevo",
                "Nada especial"
            )
        )
    )

    private fun getSlowPerformanceQuestions(): List<Question> = listOf(
        Question(
            id = "gradual_slowness",
            text = "Â¿La lentitud apareciÃ³ de repente o fue gradual (como cuando se llena el celular)?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf("De repente", "Gradualmente", "No estoy seguro/a")
        ),
        Question(
            id = "multiple_programs",
            text = "Â¿Tienes muchos programas abiertos al mismo tiempo? (como muchas pestaÃ±as del navegador)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "fan_noise",
            text = "Â¿El ventilador (como un pequeÃ±o abanico dentro) suena muy fuerte?",
            type = QuestionType.YES_NO
        ),

                Question(
                id = "gradual_slowness",
        text = "Â¿La lentitud apareciÃ³ de repente o fue gradual (como cuando se llena el celular)?",
        type = QuestionType.MULTIPLE_CHOICE,
        options = listOf("De repente", "Gradualmente", "No estoy seguro/a")
    ),
    Question(
    id = "multiple_programs",
    text = "Â¿Tienes muchos programas abiertos al mismo tiempo? (como muchas pestaÃ±as del navegador)",
    type = QuestionType.YES_NO
    ),
    Question(
    id = "fan_noise",
    text = "Â¿El ventilador (como un pequeÃ±o abanico dentro) suena muy fuerte?",
    type = QuestionType.YES_NO
    ),
    Question(
    id = "startup_time",
    text = "Â¿CuÃ¡nto tiempo tarda en encender completamente?",
    type = QuestionType.MULTIPLE_CHOICE,
    options = listOf(
    "Menos de 2 minutos (normal)",
    "Entre 2 y 5 minutos",
    "MÃ¡s de 5 minutos",
    "No logra encender completamente"
    )
    ),
    Question(
    id = "internet_usage",
    text = "Â¿EstÃ¡ lenta solo en internet o en todo?",
    type = QuestionType.MULTIPLE_CHOICE,
    options = listOf(
    "Solo en internet",
    "En todo",
    "Principalmente al abrir programas",
    "Solo con archivos grandes"
    )
    ),
    Question(
    id = "storage_full",
    text = "Â¿Te ha aparecido algÃºn mensaje sobre 'espacio en disco' o 'memoria llena'?",
    type = QuestionType.YES_NO
    ),
    Question(
    id = "antivirus_scan",
    text = "Â¿Tienes antivirus y cuÃ¡ndo fue la Ãºltima vez que hizo una revisiÃ³n completa?",
    type = QuestionType.MULTIPLE_CHOICE,
    options = listOf(
    "SÃ­ tengo, revisÃ³ recientemente",
    "SÃ­ tengo, pero no sÃ© cuÃ¡ndo revisÃ³",
    "No tengo antivirus",
    "No sÃ© si tengo antivirus"
    )
    )


    )


    private fun diagnoseNoPower(answers: Map<String, String>): DiagnosticResult {
        val powerConnected = answers["power_cable"] == "SÃ­"
        val lightsOrSounds = answers["power_button"] == "SÃ­"

        return when {
            !powerConnected -> DiagnosticResult(
                title = "Problema de conexiÃ³n elÃ©ctrica",
                description = "Es como cuando tu celular no carga porque no estÃ¡ conectado correctamente",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Verifica que el cable estÃ© bien conectado a la computadora"),
                    Solution(2, "Revisa que el cable estÃ© conectado a un enchufe que funcione"),
                    Solution(3, "Prueba con otro enchufe de la casa")
                ),
                probability = 85
            )
            !lightsOrSounds -> DiagnosticResult(
                title = "Posible problema de fuente de poder",
                description = "La 'fuente de poder' es como el corazÃ³n que da energÃ­a a todo",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Verifica que el interruptor de la fuente estÃ© encendido (en la parte trasera)"),
                    Solution(2, "Es recomendable que un tÃ©cnico revise la fuente de poder")
                ),
                probability = 70
            )
            else -> DiagnosticResult(
                title = "Problema complejo de hardware",
                description = "Necesitas ayuda de un tÃ©cnico especializado",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Contacta con un tÃ©cnico de confianza")
                ),
                probability = 60
            )
        }
    }

    private fun diagnoseSlowPerformance(answers: Map<String, String>): DiagnosticResult {
        val gradualSlowness = answers["gradual_slowness"] == "Gradualmente"
        val multiplePrograms = answers["multiple_programs"] == "SÃ­"
        val fanNoise = answers["fan_noise"] == "SÃ­"

        return when {
            multiplePrograms -> DiagnosticResult(
                title = "Sobrecarga de programas",
                description = "Tu computadora estÃ¡ trabajando con demasiadas cosas a la vez (como tener muchas apps abiertas en el celular)",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Cierra los programas que no estÃ©s usando"),
                    Solution(2, "Reinicia la computadora (como reiniciar el celular)"),
                    Solution(3, "Evita tener muchos programas abiertos al mismo tiempo")
                ),
                probability = 80
            )
            fanNoise && gradualSlowness -> DiagnosticResult(
                title = "Posible sobrecalentamiento",
                description = "Tu computadora estÃ¡ como con fiebre, necesita refrescarse",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Apaga la computadora y deja que se enfrÃ­e por 30 minutos"),
                    Solution(2, "Verifica que los ventiladores no estÃ©n bloqueados por polvo"),
                    Solution(3, "MantÃ©n la computadora en un lugar con buena ventilaciÃ³n")
                ),
                probability = 70
            )
            else -> DiagnosticResult(
                title = "Lentitud general del sistema",
                description = "Puede ser falta de mantenimiento o programas innecesarios",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Reinicia la computadora regularmente"),
                    Solution(2, "Considera hacer una limpieza de archivos temporales"),
                    Solution(3, "Si persiste, consulta con un tÃ©cnico para mantenimiento")
                ),
                probability = 60
            )
        }
    }

    // Agregar estas funciones a tu clase DiagnosticEngine

    private fun getNoDisplayQuestions(): List<Question> = listOf(
        Question(
            id = "monitor_power",
            text = "Â¿La pantalla/monitor estÃ¡ encendida? (deberÃ­a tener una luz que indique que estÃ¡ prendida)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "cable_connection",
            text = "Â¿EstÃ¡ bien conectado el cable entre la computadora y la pantalla?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "computer_sounds",
            text = "Â¿Escuchas que la computadora estÃ¡ funcionando? (ventiladores, discos duros)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "led_lights",
            text = "Â¿Se encienden luces en la computadora cuando la prendes?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, se encienden luces",
                "No se enciende nada",
                "Parpadean luces",
                "No estoy seguro/a"
            )
        ),
        Question(
            id = "multiple_monitors",
            text = "Â¿Tienes otra pantalla o TV donde puedas probar conectar la computadora?",
            type = QuestionType.YES_NO
        )
    )

    private fun getBlueScreenQuestions(): List<Question> = listOf(
        Question(
            id = "error_frequency",
            text = "Â¿Con quÃ© frecuencia aparecen estas pantallas de error?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Cada vez que enciendo la computadora",
                "De vez en cuando, sin patrÃ³n claro",
                "Solo cuando uso ciertos programas",
                "DespuÃ©s de instalar algo nuevo",
                "Solo una vez hasta ahora"
            )
        ),
        Question(
            id = "error_timing",
            text = "Â¿CuÃ¡ndo aparecen generalmente estos errores?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Al encender la computadora",
                "Mientras estoy trabajando",
                "Al apagar la computadora",
                "En cualquier momento",
                "Solo con programas especÃ­ficos"
            )
        ),
        Question(
            id = "recent_software",
            text = "Â¿Instalaste algÃºn programa nuevo recientemente?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "memory_activities",
            text = "Â¿Estabas haciendo algo especÃ­fico cuando apareciÃ³ el error?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Navegando en internet",
                "Jugando",
                "Viendo videos",
                "Usando programas de oficina",
                "Nada especial, solo estaba encendida"
            )
        )
    )

    private fun getStrangeSoundsQuestions(): List<Question> = listOf(
        Question(
            id = "sound_type",
            text = "Â¿QuÃ© tipo de sonido escuchas?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Ruido fuerte como un helicÃ³ptero",
                "Clicks o chasquidos repetitivos",
                "Silbidos o chirridos",
                "Como si algo estuviera rayando",
                "Pitidos o beeps al encender"
            )
        ),
        Question(
            id = "sound_timing",
            text = "Â¿CuÃ¡ndo escuchas estos sonidos?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Solo al encender la computadora",
                "Todo el tiempo que estÃ¡ encendida",
                "Solo cuando trabajo mucho con ella",
                "De vez en cuando, sin patrÃ³n",
                "Solo al apagar"
            )
        ),
        Question(
            id = "sound_location",
            text = "Â¿De dÃ³nde parece venir el sonido?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "De adentro de la computadora",
                "Del monitor/pantalla",
                "No estoy seguro/a",
                "Parece venir de los parlantes"
            )
        ),
        Question(
            id = "performance_with_sound",
            text = "Â¿Cuando hace estos ruidos, la computadora funciona normal?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, funciona normal",
                "Se pone mÃ¡s lenta",
                "A veces se congela",
                "Se apaga sola"
            )
        )
    )

    // Preguntas adicionales para "No Power" (expandir las existentes)
    private fun getNoPowerQuestionsExpanded(): List<Question> = listOf(
        Question(
            id = "power_cable",
            text = "Â¿EstÃ¡ conectado el cable de electricidad? (como el cargador de tu celular)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "power_outlet_test",
            text = "Â¿Probaste conectar otra cosa en el mismo enchufe? (como una lÃ¡mpara)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "power_button",
            text = "Â¿Al presionar el botÃ³n de encendido, se enciende alguna luz o se escucha algÃºn sonido?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "power_button_location",
            text = "Â¿EstÃ¡s seguro/a de cuÃ¡l es el botÃ³n de encendido?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­, es el botÃ³n mÃ¡s grande",
                "Creo que sÃ­, pero no estoy seguro/a",
                "No estoy seguro/a cuÃ¡l es"
            )
        ),
        Question(
            id = "recent_changes",
            text = "Â¿PasÃ³ algo especial antes de que dejara de funcionar?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Tormenta elÃ©ctrica",
                "Se fue la luz",
                "La movÃ­ de lugar",
                "InstalÃ© algo nuevo",
                "Se cayÃ³ o golpeÃ³",
                "DerramÃ© lÃ­quido cerca",
                "Nada especial"
            )
        ),
        Question(
            id = "last_working",
            text = "Â¿CuÃ¡ndo fue la Ãºltima vez que funcionÃ³ bien?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Ayer",
                "Hace unos dÃ­as",
                "Hace una semana",
                "Hace mÃ¡s de una semana",
                "No recuerdo"
            )
        )
    )

    // Preguntas adicionales para "Slow Performance" (expandir las existentes)
    private fun getSlowPerformanceQuestionsExpanded(): List<Question> = listOf(
        Question(
            id = "gradual_slowness",
            text = "Â¿La lentitud apareciÃ³ de repente o fue gradual (como cuando se llena el celular)?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf("De repente", "Gradualmente", "No estoy seguro/a")
        ),
        Question(
            id = "multiple_programs",
            text = "Â¿Tienes muchos programas abiertos al mismo tiempo? (como muchas pestaÃ±as del navegador)",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "fan_noise",
            text = "Â¿El ventilador (como un pequeÃ±o abanico dentro) suena muy fuerte?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "startup_time",
            text = "Â¿CuÃ¡nto tiempo tarda en encender completamente?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Menos de 2 minutos (normal)",
                "Entre 2 y 5 minutos",
                "MÃ¡s de 5 minutos",
                "No logra encender completamente"
            )
        ),
        Question(
            id = "internet_usage",
            text = "Â¿EstÃ¡ lenta solo en internet o en todo?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "Solo en internet",
                "En todo",
                "Principalmente al abrir programas",
                "Solo con archivos grandes"
            )
        ),
        Question(
            id = "storage_full",
            text = "Â¿Te ha aparecido algÃºn mensaje sobre 'espacio en disco' o 'memoria llena'?",
            type = QuestionType.YES_NO
        ),
        Question(
            id = "antivirus_scan",
            text = "Â¿Tienes antivirus y cuÃ¡ndo fue la Ãºltima vez que hizo una revisiÃ³n completa?",
            type = QuestionType.MULTIPLE_CHOICE,
            options = listOf(
                "SÃ­ tengo, revisÃ³ recientemente",
                "SÃ­ tengo, pero no sÃ© cuÃ¡ndo revisÃ³",
                "No tengo antivirus",
                "No sÃ© si tengo antivirus"
            )
        )
    )




    private fun diagnoseNoDisplay(answers: Map<String, String>): DiagnosticResult {
        val monitorPower = answers["monitor_power"] == "SÃ­"
        val cableConnection = answers["cable_connection"] == "SÃ­"
        val computerSounds = answers["computer_sounds"] == "SÃ­"
        val ledLights = answers["led_lights"]

        return when {
            !monitorPower -> DiagnosticResult(
                title = "Problema con la pantalla/monitor",
                description = "Tu pantalla no estÃ¡ recibiendo energÃ­a, como cuando tu TV estÃ¡ apagada",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Verifica que la pantalla estÃ© conectada a la electricidad"),
                    Solution(2, "Presiona el botÃ³n de encendido de la pantalla"),
                    Solution(3, "Revisa que el cable de poder de la pantalla estÃ© bien conectado")
                ),
                probability = 85
            )
            !cableConnection -> DiagnosticResult(
                title = "Problema de conexiÃ³n de video",
                description = "Es como cuando el cable del TV estÃ¡ suelto",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Desconecta y vuelve a conectar el cable entre computadora y pantalla"),
                    Solution(2, "Verifica que estÃ© conectado firmemente en ambos extremos"),
                    Solution(3, "Si tienes otro cable similar, pruÃ©balo")
                ),
                probability = 75
            )
            !computerSounds && ledLights == "No se enciende nada" -> DiagnosticResult(
                title = "La computadora no estÃ¡ encendiendo",
                description = "Este es realmente un problema de 'no enciende', no de pantalla",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Verifica la conexiÃ³n elÃ©ctrica de la computadora"),
                    Solution(2, "Revisa el botÃ³n de encendido de la computadora"),
                    Solution(3, "Consulta las soluciones para 'No enciende para nada'")
                ),
                probability = 90
            )
            computerSounds && ledLights == "SÃ­, se encienden luces" -> DiagnosticResult(
                title = "Problema de tarjeta grÃ¡fica o memoria RAM",
                description = "La computadora funciona pero no puede mostrar imagen. Es un problema mÃ¡s tÃ©cnico",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Apaga la computadora y desconÃ©ctala por 5 minutos"),
                    Solution(2, "Si tienes otra pantalla o TV, prueba conectarla ahÃ­"),
                    Solution(3, "Este problema necesita un tÃ©cnico especializado", isAdvanced = true)
                ),
                probability = 70
            )
            else -> DiagnosticResult(
                title = "Problema de video complejo",
                description = "Necesitas ayuda tÃ©cnica especializada",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Prueba con otra pantalla si tienes disponible"),
                    Solution(2, "Contacta con un tÃ©cnico de confianza")
                ),
                probability = 60
            )
        }
    }

    private fun diagnoseBlueScreen(answers: Map<String, String>): DiagnosticResult {
        val errorFrequency = answers["error_frequency"]
        val recentSoftware = answers["recent_software"] == "SÃ­"
        val errorTiming = answers["error_timing"]

        return when {
            errorFrequency == "Cada vez que enciendo la computadora" -> DiagnosticResult(
                title = "Error crÃ­tico del sistema",
                description = "Tu computadora tiene un problema serio que no la deja funcionar bien",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Intenta encender en 'Modo Seguro' (F8 al encender)", isAdvanced = true),
                    Solution(2, "Si funciona en modo seguro, desinstala programas recientes"),
                    Solution(3, "Necesitas ayuda de un tÃ©cnico urgentemente")
                ),
                probability = 85
            )
            recentSoftware && errorFrequency == "DespuÃ©s de instalar algo nuevo" -> DiagnosticResult(
                title = "Conflicto de software",
                description = "El programa nuevo que instalaste no es compatible con tu computadora",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Desinstala el Ãºltimo programa que instalaste"),
                    Solution(2, "Reinicia la computadora despuÃ©s de desinstalar"),
                    Solution(3, "Si no mejora, restaura el sistema a un punto anterior", isAdvanced = true)
                ),
                probability = 80
            )
            errorTiming == "Solo con programas especÃ­ficos" -> DiagnosticResult(
                title = "Problema con programas especÃ­ficos",
                description = "Algunos programas estÃ¡n causando conflictos",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Identifica quÃ© programas causan el error"),
                    Solution(2, "Actualiza o reinstala esos programas"),
                    Solution(3, "Evita usar esos programas hasta solucionarlo")
                ),
                probability = 70
            )
            else -> DiagnosticResult(
                title = "Error intermitente del sistema",
                description = "Pueden ser problemas de memoria, disco duro o sobrecalentamiento",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Apaga la computadora y dÃ©jala descansar 30 minutos"),
                    Solution(2, "Verifica que no estÃ© acumulando polvo"),
                    Solution(3, "Haz un respaldo de tus archivos importantes"),
                    Solution(4, "Consulta con un tÃ©cnico para revisar memoria y disco duro")
                ),
                probability = 60
            )
        }
    }

    private fun diagnoseStrangeSounds(answers: Map<String, String>): DiagnosticResult {
        val soundType = answers["sound_type"]
        val soundTiming = answers["sound_timing"]
        val performanceWithSound = answers["performance_with_sound"]

        return when {
            soundType == "Ruido fuerte como un helicÃ³ptero" -> DiagnosticResult(
                title = "Ventilador trabajando excesivamente",
                description = "Los ventiladores estÃ¡n trabajando muy fuerte, como cuando tienes mucha fiebre",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Apaga la computadora y limpia el polvo de los ventiladores"),
                    Solution(2, "Verifica que las salidas de aire no estÃ©n bloqueadas"),
                    Solution(3, "Usa la computadora en un lugar mÃ¡s fresco"),
                    Solution(4, "Si persiste, puede necesitar mantenimiento tÃ©cnico")
                ),
                probability = 80
            )
            soundType == "Clicks o chasquidos repetitivos" -> DiagnosticResult(
                title = "Posible problema de disco duro",
                description = "El disco duro (donde se guardan tus archivos) puede estar fallando",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "HAZ RESPALDO DE TUS ARCHIVOS IMPORTANTES INMEDIATAMENTE"),
                    Solution(2, "Evita usar la computadora para tareas pesadas"),
                    Solution(3, "Contacta un tÃ©cnico urgentemente para revisar el disco duro")
                ),
                probability = 85
            )
            soundType == "Pitidos o beeps al encender" -> DiagnosticResult(
                title = "CÃ³digos de error de la computadora",
                description = "La computadora estÃ¡ tratando de decirte quÃ© problema tiene",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Cuenta cuÃ¡ntos pitidos hace y si son largos o cortos"),
                    Solution(2, "Anota el patrÃ³n de pitidos"),
                    Solution(3, "Consulta con un tÃ©cnico y comparte esta informaciÃ³n")
                ),
                probability = 75
            )
            performanceWithSound == "Se apaga sola" -> DiagnosticResult(
                title = "Sobrecalentamiento crÃ­tico",
                description = "Tu computadora se estÃ¡ protegiendo del calor excesivo",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Deja de usar la computadora inmediatamente"),
                    Solution(2, "ApÃ¡gala y dÃ©jala enfriar por varias horas"),
                    Solution(3, "Verifica que todos los ventiladores funcionen"),
                    Solution(4, "Necesita limpieza y mantenimiento tÃ©cnico urgente")
                ),
                probability = 90
            )
            else -> DiagnosticResult(
                title = "Ruidos anormales del sistema",
                description = "Tu computadora estÃ¡ haciendo sonidos que no deberÃ­a",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Apaga la computadora y verifica que no haya objetos sueltos"),
                    Solution(2, "Escucha cuidadosamente de dÃ³nde viene el ruido"),
                    Solution(3, "Si el ruido persiste, consulta con un tÃ©cnico")
                ),
                probability = 65
            )
        }
    }

    // Funciones de diagnÃ³stico para nuevos sÃ­ntomas
    private fun diagnoseInternetProblems(answers: Map<String, String>): DiagnosticResult {
        val wifiConnected = answers["wifi_connected"]
        val otherDevices = answers["other_devices"] == "SÃ­"
        val routerRestart = answers["router_restart"] == "SÃ­"

        return when {
            !otherDevices -> DiagnosticResult(
                title = "Problema con tu internet",
                description = "El problema no es tu computadora, es tu conexiÃ³n a internet",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Contacta a tu proveedor de internet"),
                    Solution(2, "Apaga y enciende tu mÃ³dem/router"),
                    Solution(3, "Verifica que todas las conexiones del mÃ³dem estÃ©n bien")
                ),
                probability = 85
            )
            wifiConnected == "Aparece con una X o signo de exclamaciÃ³n" -> DiagnosticResult(
                title = "Problema de configuraciÃ³n WiFi",
                description = "Tu computadora detecta la red pero no se puede conectar correctamente",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Olvida la red WiFi y conÃ©ctate de nuevo"),
                    Solution(2, "Verifica que tengas la contraseÃ±a correcta"),
                    Solution(3, "Reinicia tu computadora y el router"),
                    Solution(4, "AcÃ©rcate mÃ¡s al router")
                ),
                probability = 75
            )
            wifiConnected == "No aparece nada" -> DiagnosticResult(
                title = "Problema con adaptador WiFi",
                description = "Tu computadora no puede detectar redes WiFi",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Verifica que el WiFi estÃ© activado en tu computadora"),
                    Solution(2, "Busca un botÃ³n fÃ­sico de WiFi en tu laptop"),
                    Solution(3, "Puede ser un problema de drivers - consulta un tÃ©cnico")
                ),
                probability = 70
            )
            else -> DiagnosticResult(
                title = "Problema de red intermitente",
                description = "La conexiÃ³n funciona pero no de manera estable",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Reinicia tu computadora"),
                    Solution(2, "AcÃ©rcate mÃ¡s al router"),
                    Solution(3, "Evita interferencias (microondas, otros dispositivos)")
                ),
                probability = 60
            )
        }
    }

    private fun diagnoseFreezing(answers: Map<String, String>): DiagnosticResult {
        val frequency = answers["freeze_frequency"]
        val pattern = answers["freeze_pattern"]
        val forceRestart = answers["force_restart"] == "SÃ­"
        val overheating = answers["overheating"] == "SÃ­"
        val lowDiskSpace = answers["low_disk_space"] == "SÃ­"
        val antivirusScan = answers["antivirus_scan"]
        val blueScreen = answers["blue_screen"] == "SÃ­"
        val unusualNoises = answers["unusual_noises"] == "SÃ­"
        val recentUpdates = answers["recent_updates"] == "SÃ­"

        return when {
            // Caso 1: Congelamiento grave y requiere tÃ©cnico
            frequency == "Varias veces al dÃ­a" && forceRestart -> DiagnosticResult(
                title = "Problema crÃ­tico del sistema",
                description = "Tu computadora tiene un problema serio que requiere atenciÃ³n tÃ©cnica.",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Haz respaldo de tus archivos importantes."),
                    Solution(2, "Verifica que no estÃ© sobrecalentÃ¡ndose."),
                    Solution(3, "Consulta con un tÃ©cnico - puede ser la memoria RAM o el disco duro.")
                ),
                probability = 85
            )

            // Caso 2: Congelamiento por temperatura alta
            overheating -> DiagnosticResult(
                title = "Sobrecalentamiento",
                description = "Tu computadora se calienta demasiado y se congela para protegerse.",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Limpia el ventilador y las rejillas de ventilaciÃ³n."),
                    Solution(2, "ColÃ³cala en un lugar ventilado y evita tapar la salida de aire."),
                    Solution(3, "Usa una base de enfriamiento si es una laptop.")
                ),
                probability = 90
            )

            // Caso 3: Congelamiento por espacio en disco
            lowDiskSpace -> DiagnosticResult(
                title = "Espacio en disco insuficiente",
                description = "Tu computadora tiene poco espacio libre, lo que puede causar congelamientos.",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Elimina archivos que no necesites."),
                    Solution(2, "Desinstala programas que no uses."),
                    Solution(3, "VacÃ­a la papelera de reciclaje y limpia archivos temporales.")
                ),
                probability = 80
            )

            // Caso 4: Posible infecciÃ³n de virus o malware
            antivirusScan == "No he pasado antivirus" -> DiagnosticResult(
                title = "Posible virus o malware",
                description = "No has pasado antivirus y esto podrÃ­a causar bloqueos y congelamientos.",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Instala y ejecuta un antivirus de confianza."),
                    Solution(2, "Elimina archivos sospechosos detectados."),
                    Solution(3, "MantÃ©n actualizado tu antivirus.")
                ),
                probability = 75
            )

            // Caso 5: Error grave del sistema con pantalla azul
            blueScreen -> DiagnosticResult(
                title = "Error crÃ­tico (pantalla azul)",
                description = "Una pantalla azul indica un fallo grave de hardware o sistema.",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Anota el cÃ³digo de error de la pantalla azul."),
                    Solution(2, "Busca en internet soluciones para ese cÃ³digo."),
                    Solution(3, "Consulta a un tÃ©cnico si sigue ocurriendo.")
                ),
                probability = 90
            )

            // Caso 6: Posible problema fÃ­sico del disco duro
            unusualNoises -> DiagnosticResult(
                title = "Posible daÃ±o fÃ­sico del disco duro",
                description = "Escuchar ruidos extraÃ±os puede indicar que el disco duro estÃ¡ fallando.",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Haz una copia de seguridad de tus archivos importantes de inmediato."),
                    Solution(2, "Evita mover la computadora bruscamente."),
                    Solution(3, "Consulta a un tÃ©cnico para revisar el disco duro.")
                ),
                probability = 85
            )

            // Caso 7: Problema despuÃ©s de actualizaciÃ³n reciente
            recentUpdates -> DiagnosticResult(
                title = "Problema despuÃ©s de actualizaciÃ³n",
                description = "Es posible que una actualizaciÃ³n reciente estÃ© causando conflictos.",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Revisa si hay actualizaciones pendientes para completarlas."),
                    Solution(2, "Considera desinstalar la Ãºltima actualizaciÃ³n si empezÃ³ despuÃ©s de ella."),
                    Solution(3, "Reinicia la computadora despuÃ©s de aplicar cambios.")
                ),
                probability = 70
            )

            // Caso 8: Congelamiento por programa especÃ­fico
            pattern == "Al abrir programas especÃ­ficos" -> DiagnosticResult(
                title = "Problema con programas especÃ­ficos",
                description = "Algunos programas estÃ¡n causando conflictos o errores.",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Identifica cuÃ¡les programas causan el problema."),
                    Solution(2, "Reinstala esos programas."),
                    Solution(3, "Verifica si tienes suficiente memoria RAM."),
                    Solution(4, "Actualiza esos programas a la Ãºltima versiÃ³n.")
                ),
                probability = 75
            )

            // Caso 9: Congelamiento por mÃºltiples tareas
            pattern == "Al hacer varias cosas a la vez" -> DiagnosticResult(
                title = "Falta de recursos del sistema",
                description = "Tu computadora no tiene suficiente memoria o recursos para tantas tareas a la vez.",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Cierra programas que no estÃ©s usando."),
                    Solution(2, "Evita tener muchas pestaÃ±as o aplicaciones abiertas."),
                    Solution(3, "Reinicia la computadora con frecuencia."),
                    Solution(4, "Considera aumentar la memoria RAM si es posible.")
                ),
                probability = 85
            )

            // Caso general
            else -> DiagnosticResult(
                title = "Congelamiento general",
                description = "El congelamiento puede deberse a varias causas posibles.",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Verifica si hay actualizaciones pendientes."),
                    Solution(2, "Ejecuta un antivirus completo."),
                    Solution(3, "Limpia archivos temporales y optimiza el disco."),
                    Solution(4, "Consulta a un tÃ©cnico si el problema continÃºa.")
                ),
                probability = 65
            )
        }
    }


    private fun diagnoseOverheating(answers: Map<String, String>): DiagnosticResult {
        val heatLocation = answers["heat_location"]
        val shutdownDueHeat = answers["shutdown_due_heat"] == "SÃ­"
        val ventilationBlocked = answers["ventilation_blocked"]

        return when {
            shutdownDueHeat -> DiagnosticResult(
                title = "Sobrecalentamiento crÃ­tico",
                description = "Tu computadora se estÃ¡ protegiendo del calor excesivo apagÃ¡ndose",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "DEJA DE USAR LA COMPUTADORA inmediatamente"),
                    Solution(2, "ApÃ¡gala y dÃ©jala enfriar por varias horas"),
                    Solution(3, "Limpia los ventiladores y salidas de aire"),
                    Solution(4, "Necesita limpieza tÃ©cnica profesional URGENTE")
                ),
                probability = 95
            )
            ventilationBlocked == "SÃ­, tienen mucho polvo" -> DiagnosticResult(
                title = "VentilaciÃ³n obstruida",
                description = "El polvo estÃ¡ impidiendo que tu computadora se enfrÃ­e correctamente",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Apaga la computadora completamente"),
                    Solution(2, "Limpia cuidadosamente las salidas de aire con aire comprimido"),
                    Solution(3, "Usa la computadora en lugares con mejor ventilaciÃ³n"),
                    Solution(4, "Considera una limpieza tÃ©cnica profesional")
                ),
                probability = 85
            )
            heatLocation == "En la parte de abajo (laptop)" -> DiagnosticResult(
                title = "Problema de ventilaciÃ³n en laptop",
                description = "Tu laptop no puede respirar bien por donde estÃ¡ colocada",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "No uses la laptop sobre camas, sofÃ¡s o superficies blandas"),
                    Solution(2, "Usa una base con ventiladores para laptop"),
                    Solution(3, "Eleva la laptop para mejor circulaciÃ³n de aire"),
                    Solution(4, "Limpia los ventiladores internos")
                ),
                probability = 80
            )
            else -> DiagnosticResult(
                title = "Calentamiento anormal",
                description = "Tu computadora estÃ¡ trabajando mÃ¡s de lo normal",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Verifica quÃ© programas estÃ¡n usando mucho procesador"),
                    Solution(2, "Cierra programas innecesarios"),
                    Solution(3, "MantÃ©n la computadora en lugar fresco"),
                    Solution(4, "Si persiste, puede necesitar mantenimiento tÃ©cnico")
                ),
                probability = 70
            )
        }
    }

    private fun diagnoseProgramsNotOpening(answers: Map<String, String>): DiagnosticResult {
        val allPrograms = answers["all_programs"]
        val doubleClick = answers["double_click"]
        val errorMessages = answers["error_messages"] == "SÃ­"

        return when {
            doubleClick == "Solo un click" -> DiagnosticResult(
                title = "Problema de uso - necesitas doble click",
                description = "Para abrir programas necesitas hacer doble click rÃ¡pido, no solo uno",
                severity = SeverityLevel.LOW,
                solutions = listOf(
                    Solution(1, "Haz doble click rÃ¡pido en los Ã­conos"),
                    Solution(2, "AsegÃºrate de hacer los dos clicks muy rÃ¡pido"),
                    Solution(3, "Practica con diferentes Ã­conos")
                ),
                probability = 90
            )
            allPrograms == "NingÃºn programa abre" && errorMessages -> DiagnosticResult(
                title = "Problema crÃ­tico del sistema",
                description = "Hay un problema serio con tu sistema operativo",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Reinicia la computadora"),
                    Solution(2, "Si persiste, puede necesitar reparaciÃ³n del sistema"),
                    Solution(3, "Haz respaldo de tus archivos"),
                    Solution(4, "Consulta con un tÃ©cnico urgentemente")
                ),
                probability = 85
            )
            allPrograms == "Solo algunos programas especÃ­ficos" -> DiagnosticResult(
                title = "Programas daÃ±ados o incompatibles",
                description = "Algunos programas especÃ­ficos tienen problemas",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Identifica quÃ© programas no funcionan"),
                    Solution(2, "Reinstala esos programas especÃ­ficos"),
                    Solution(3, "Verifica que sean compatibles con tu sistema"),
                    Solution(4, "Busca actualizaciones de esos programas")
                ),
                probability = 75
            )
            else -> DiagnosticResult(
                title = "Problema general de programas",
                description = "Puede ser un problema de configuraciÃ³n o sistema",
                severity = SeverityLevel.MEDIUM,
                solutions = listOf(
                    Solution(1, "Reinicia la computadora"),
                    Solution(2, "Verifica que tengas permisos de administrador"),
                    Solution(3, "Ejecuta un antivirus completo"),
                    Solution(4, "Si persiste, consulta un tÃ©cnico")
                ),
                probability = 65
            )
        }
    }

    private fun diagnoseRandomShutdown(answers: Map<String, String>): DiagnosticResult {
        val shutdownWarning = answers["shutdown_warning"]
        val powerSupplyCheck = answers["power_supply_check"]
        val shutdownPattern = answers["shutdown_pattern"]

        return when {
            shutdownWarning == "Se apaga de repente sin avisar" && powerSupplyCheck == "Directamente al enchufe de la pared" -> DiagnosticResult(
                title = "Problema elÃ©ctrico",
                description = "Posible problema con la energÃ­a elÃ©ctrica o fuente de poder",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Conecta la computadora a un regulador de voltaje"),
                    Solution(2, "Verifica que el enchufe funcione bien"),
                    Solution(3, "Puede ser problema de la fuente de poder - consulta tÃ©cnico"),
                    Solution(4, "Evita enchufes con problemas elÃ©ctricos")
                ),
                probability = 80
            )
            shutdownPattern == "Solo cuando hace calor en el ambiente" || shutdownPattern == "Siempre despuÃ©s de cierto tiempo de uso" -> DiagnosticResult(
                title = "Sobrecalentamiento progresivo",
                description = "Tu computadora se apaga para protegerse del calor",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Limpia los ventiladores y salidas de aire"),
                    Solution(2, "Usa la computadora en lugares mÃ¡s frescos"),
                    Solution(3, "Reduce el tiempo de uso continuo"),
                    Solution(4, "Necesita limpieza tÃ©cnica profesional")
                ),
                probability = 85
            )
            shutdownWarning == "La pantalla se pone azul primero" -> DiagnosticResult(
                title = "Error crÃ­tico del sistema",
                description = "Problema serio de software o hardware que causa pantallas azules",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Anota el cÃ³digo de error de la pantalla azul"),
                    Solution(2, "Haz respaldo de archivos importantes"),
                    Solution(3, "Puede ser problema de memoria RAM o disco duro"),
                    Solution(4, "Consulta tÃ©cnico con el cÃ³digo de error")
                ),
                probability = 75
            )
            else -> DiagnosticResult(
                title = "Apagado anormal del sistema",
                description = "Problema que puede tener mÃºltiples causas",
                severity = SeverityLevel.HIGH,
                solutions = listOf(
                    Solution(1, "Verifica la temperatura de la computadora"),
                    Solution(2, "Usa un regulador de voltaje"),
                    Solution(3, "Ejecuta diagnÃ³sticos de memoria y disco duro"),
                    Solution(4, "Consulta con un tÃ©cnico para diagnÃ³stico completo")
                ),
                probability = 65
            )
        }
    }


}